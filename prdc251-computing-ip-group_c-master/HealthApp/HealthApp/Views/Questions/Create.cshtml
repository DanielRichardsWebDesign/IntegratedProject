@using HealthApp.Models
@model Question

@{
    ViewBag.Title = "Create";

    @*Validates wehter or not a user has logged on*@
    if (Session["LoggedDoctorId"] == null)
    {
        Response.Redirect("~/Login/DoctorLogin");
    }
}

<h2>Create</h2>

<p class="font-weight-bold">Questions able to Create: @Session["SurveyQuestionAmount"]</p>
<p class="font-weight-bold">Questions Currently Created: @Session["QuestionAmount"]<p />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SurveyID, "SurveyID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurveyID, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "readonly", Value = Session["SurveyID"] } })
                @Html.ValidationMessageFor(model => model.SurveyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question1, "Question", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionType, "Question Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.QuestionType, new List<SelectListItem>
                {
                    new SelectListItem(){Text = "Numeric Answer", Value="Numeric Answer"},
                    new SelectListItem(){Text = "Multiple Choice", Value="Multiple Choice"},
                    new SelectListItem(){Text = "True or False", Value="True Or False"},
                    new SelectListItem(){Text = "Audio", Value="Audio"},
                    new SelectListItem(){Text = "Video", Value="Video"},
                    new SelectListItem(){Text = "Free Text", Value="Free Text"},
                    new SelectListItem(){Text = "Condition", Value="Condition"},
                }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
