@model HealthApp.Models.QuestionRule

@{
    ViewBag.Title = "RuleParameters";

    @*Validates wehter or not a user has logged on*@
    if (Session["LoggedDoctorId"] == null)
    {
        Response.Redirect("~/Login/DoctorLogin");
    }
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Survey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.QuestionID, "SurveyID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionID, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "readonly", Value = Session["QuestionID"] } })
                @Html.ValidationMessageFor(model => model.QuestionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RuleParam, "Rule Parameter", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RuleParam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RuleParam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Parameter" class="btn btn-default" />
            </div>
        </div>
    </div>
}
